import re

from argsense import cli
from lk_utils import dumps
from lk_utils import fs
from lk_utils import loads
from lk_utils import timestamp

from mypc_settings.common import print_conversion, reformat_path


def _load_config() -> dict:
    return loads(fs.xpath('../config/shell/config.yaml'))  # TEST


@cli.cmd()
def main(
    file: str = 'C:/Users/Likianta/Documents/WindowsPowerShell/Microsoft'
                '.PowerShell_profile.ps1',
    turn_to_nushell: bool = False,
) -> None:
    cfg = _load_config()
    output = [
        '# this file is auto generated by [prj] '
        'personalized-computer-settings : mypc_settings/'
        'make_powershell_profile.py',
        '# file was updated at {}'.format(timestamp('y-m-d h:m:s')),
        '',
        'oh-my-posh init pwsh --config $env:POSH_THEMES_PATH\\amro.omp.json | '
        'Invoke-Expression',
        '',
    ]
    
    # aliases
    for key, val in _refmt_aliases(cfg['alias']).items():
        print_conversion(key, val)
        # output.append('New-Alias -Name {} -Value "{}"'.format(key, val))
        output.append('function {} {{ {} $args }}'.format(key, val))
        #   https://stackoverflow.com/a/4167071
    output.append('')
    
    # env vars
    for key, val in cfg['environment'].items():
        if isinstance(val, str): val = (val,)
        output.append('Set-Item -Path env:{} -Value "{}"'.format(
            key, ';'.join(map(reformat_path, val))
        ))
    output.append('')
    
    if turn_to_nushell:
        output.append('C:/Likianta/apps/nushell/nu.exe')
    
    dumps(output, file, 'plain')


def _refmt_aliases(aliases: dict) -> dict:
    def _extend_replace(item: str) -> str:
        return out[item]
    
    out = {}
    for k, v in aliases.items():
        out[k] = reformat_path(v, custom_replacer=_extend_replace)
    return out


if __name__ == '__main__':
    # pox mypc_settings/make_powershell_profile.py
    cli.run(main)
